name: CI

on:
  push:

env:
  IMAGE: ghcr.io/jgiannuzzi/setup-build-matrix
  TAG: v1.0.0

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build Docker image
        run: docker build -t $IMAGE:$TAG .
      - name: Test action
        uses: ./
        id: test
        with:
          config: |
            matrix:
              os: [ubuntu-latest, windows-latest]
              component: [backend, ui]
              dotnet: [3.1.405, 5.0.102]
            operations:
              - type: merge
                match: [component]
                matrix:
                  component: [ui]
                  node: [14.15.4, 15.6.0]
              - type: add
                match: [os, component]
                matrix:
                  os: [windows-latest]
                  component: [ui]
                  dotnet: [4.7.2]
      - name: Verify output
        run: |
          [ '${{ steps.test.outputs.matrix }}' == '{"include":[{"os":"ubuntu-latest","component":"backend","dotnet":"3.1.405"},{"os":"ubuntu-latest","component":"backend","dotnet":"5.0.102"},{"os":"ubuntu-latest","component":"ui","dotnet":"3.1.405","node":"14.15.4"},{"os":"ubuntu-latest","component":"ui","dotnet":"3.1.405","node":"15.6.0"},{"os":"ubuntu-latest","component":"ui","dotnet":"5.0.102","node":"14.15.4"},{"os":"ubuntu-latest","component":"ui","dotnet":"5.0.102","node":"15.6.0"},{"os":"windows-latest","component":"backend","dotnet":"3.1.405"},{"os":"windows-latest","component":"backend","dotnet":"5.0.102"},{"os":"windows-latest","component":"ui","dotnet":"3.1.405","node":"14.15.4"},{"os":"windows-latest","component":"ui","dotnet":"3.1.405","node":"15.6.0"},{"os":"windows-latest","component":"ui","dotnet":"4.7.2","node":"14.15.4"},{"os":"windows-latest","component":"ui","dotnet":"4.7.2","node":"15.6.0"},{"os":"windows-latest","component":"ui","dotnet":"5.0.102","node":"14.15.4"},{"os":"windows-latest","component":"ui","dotnet":"5.0.102","node":"15.6.0"}]}' ]
      - name: Push Docker image
        if: github.ref == format('refs/tags/{0}', env.TAG)
        run: |
          echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push $IMAGE:$TAG
